* Compiling libav on windows*
  Compiling libav takes quite a bit of time and you need to setup a build 
  environment. I've followed these instructions for ffmpeg: 
  http://blogs.gnome.org/rbultje/2012/09/27/microsoft-visual-studio-support-in-ffmpeg-and-libav/
  
  Recently this articles appeared:
  http://libav.org/platform.html#Native-Windows-compilation-using-MinGW-or-MinGW_002dw64

* How to
** Install mingw http://sourceforge.net/projects/mingw/files/latest/download?source=files
   [x] C compiler
   [x] C++ compiler
   [x] MSYS Basic system
   [x] MingW Developer Toolkit

** Download yasm.exe (Win32): http://yasm.tortall.net/Download.html 
   Copy yasm-1.2.0-win32.exe to: C:\MinGW\msys\1.0\bin\yasm.exe  (note: rename!)

** Download c99-tc89 converter:  ftp://ftp.videolan.org/pub/contrib/c99-to-c89/1.0.1/
   - Copy: - c99conv.exe 
            - c99wrap.exe
            - makedef
   To: C:\MinGW\msys\1.0\bin

** Download the msinttypes: http://code.google.com/p/msinttypes/downloads/list
   - Extract to C:\msinttypes\
  
** Make sure the mingw/msys shell is aware of all Microsoft Visual Studio 
   environment variables:
    - Open C:\MinGW\msys\1.0\bin\msys.bat 
    - Add this CALL around line 17 (just before the 'if "%1" ...')

       For Microsft Visual Studio 2010: 
       CALL "%%VS100COMNTOOLS%%vsvars32.bat"  

       For Microsft Visual Studio 2012:
       CALL "%%VS110COMNTOOLS%%vsvars32.bat"  
 
** Next you can execute th compile script, or just follow these steps:
   - Open a MinGW shell: Start > MinGW > MinGW Shell
   - Go to c:\roxlu_libs\scripts\mingw\libav
   - Execute: build.sh

#   - Assuming your compiler is found, continue by downloading the git version of 
# 
#       lib av into a tmp dir:
#       $ cd 
#       $ cd Downloads
#       $ mkdir libav_compile && cd libav_compile
#       $ git clone git://git.libav.org/libav.git
#       $ cd libav 
#       $ ./configure --toolchain=msvc --arch=i686 --extra-cflags="-I/c/msinttypes/"
#       $ make
#       
#       NOTE: if you want to create DLL files, use:
#       $ ./configure --toolchain=msvc --arch=i686 --enable-shared --extra-cflags="-I/c/msinttypes/"
#  
#    - Once everything is compiled you can get the static libraries or dynamic libraries
#      from e.g libutil/libavutil.a, libswscale/libswscale.a


